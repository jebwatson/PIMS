SQL SERVER DOWNLOAD/SETUP STEPS:

INTRO: SQL Server can be run from any desktop machine capable of running windows. All that is required is a simple download of the software package at the following link:

https://www.microsoft.com/en-US/download/details.aspx?id=42299

You will want to click download, then in the pop-up, select the following:

ExpressAdv 64BIT\SQLEXPRADV_x64_ENU.exe

This is a large download, so make sure you do it on a reasonably fast network.

Once the software is downloaded, you will want to run the .exe from your downloads folder.

Click ok until you get to the SQL Server Installation Center window. Here you will be able to install a new copy of SQL Server and SQL Server Management Studio. To do this, click the "New SQL Server stand-alone installation or add features to an existing installation" option from the right side of the window.

This should take you to a SQL Server 2014 Setup window and advance through the steps until you are on the Installation Type step. Here you will want to select the "Perform a new installation of SQL Server 2014" option and click next.

Agree to the license terms to proceed to the Feature Selection screen. Ensure that all checkboxes in the Features box are checked, with the exception of LocalDB. Now click next. Continue clicking next for each step after this until you have completed the installation.

Now you can launch SQL Server Management Studio. To do this, open you windows search bar and type "Management Studio" and hit enter. This should open up the management studio so that you can interact with the database tables. It will prompt you to connect each time you log on. Simply click connect for now. This will bring you to the main screen where you can edit and view tables.

Now, to get the PIMS database(s) for our project, go to github desktop and perform a sync operation on the PIMS repository. After syncing, open up the folder where your local github repository is stored. The default location is:

C:\Users\#Your user name#\Documents\GitHub

Once here, select the PIMS folder then the Database Files folder. Now open the latest database revision folder and copy the .mdf and .ldf files. These are the database file and the log file, respectively. There may be multiple databases in one database revision (you will see more than one .mdf and .ldf file in the revision folder). If this is the case, this means that the revision contains a development database and a test database. You will want to copy all .mdf and .ldf files you see in the revision folder. If you wish to know the changes made in that revision, look for a changelog.txt file in the revision folder.

Now you will want to make these .mdf and .ldf files available to SQL Server Management Studio. To do so, go to the following file path on your computer:

C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA

Here, paste the .mdf and .ldf files. This folder (the DATA folder) is where all your database files and log files live.

Now, return to SQL Server and connect. Now, on the left side of the screen, in the Object Explorer view, expand the databases folder. Now, right click the databases folder you just expanded and select "Attach" from the menu. This will open a new window where you will select the PIMS database. In this new window, click the Add button in the middle right of the window. This will open a file window where you will need to navigate to the DATA folder from before, where you stored the PIMS database. Once there, select the PIMSDev database and then click OK. This will attach the PIMSDev database to SQL Server Management Studio where you can interact with it. If you have the PIMSTest database in your github folder, repeat this process for that database as well.

The PIMSDev database is used for development and the PIMSTest database is used for automated unit testing. When you run the PIMS software, changes made in the GUI will (should) be saved to the PIMSDev database. When you run automated unit tests on the PIMS software, these changes should be saved in the PIMSTest database.

This concludes the first time setup steps. Below are the steps for swapping databases after first time setup.

SWAPPING DATABASE:

To load the desired database into SQL Server, you will need to open the SQL Server companion tool, “Configuration Manager” and stop the server while you insert the new databases. To find this, open your windows search bar and type "Configuration Manager." This search result should have an icon that looks like a white page with a red toolbox. If you cannot get this to appear, you will need to go to the following file location and search for it there:

C:\Windows\System32

Here, you can find the Configuration Manager application by searching for "SQLServerManger12.msc" in the file menu's search box. Again, this will have an icon that looks like a white page with a red toolbox.

Once you have located this file, run it. This will open the configuration management software.

NOTE: If you were unable to get to configuration manager from the start menu search, I would recommend creating a shortcut on your desktop to the SQLServerManager12.msc file that is mentioned above. This will save you a lot of time.

In the configuration manager software, select SQL Server Services from the right menu, then select SQL Server(SQLEXPRESS) from the right menu. With this item selected, click the red stop button in the toolbar above to stop the server.

With the server stopped, select the new database files from the PIMS repository folder and copy them to your SQL Server DATA file. This will usually be located at the following file path:

C:\Program Files (x86)\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA

Once you have copied the required databases to the DATA folder in SQL Server, you may start the server again from the Configuration Manager. You should now see the new database listed in the SQL Server Management Studio.

The final step for setting up the database is ensuring that you have SQL Server login account information set up. Current builds of PIMS rely on SQL Server Authentication (rather than windows authentication) and so a SQL Server Login account is required. If you have not already set this up, you will need to go into SQL Server Management Studio, navigate the Object Explorer window and find the folder called “Security.” If you expand this folder you will see a folder called “Logins” that you can right click. From the pop-up menu, select “New Login” and then in the set-up window that appears, select the “SQL Server Authentication” radio button. Now, enter the user name "dev" and the password "test." It is recommended for development and testing purposes that you uncheck the following boxes in the setup window:

-Enforce password expiration
-User must change password at next login

Finally, in the Select a page window on the left of the new login screen, select the server roles option and then check the sysadmin checkbox to give yourself full server privileges. Now, the next time you login to SQL Server Management Studio, before connecting, change your Authentication option to SQL Server Authentication and then enter "dev" as your username and "test" as your password. Check the remember password box for convenience. Now you should be all set up with your new database revisions.

ONE THING TO NOTE: You may want to disable one setting in SQL Server to make your life easier. In the main screen of the management studio, click Tools from the menu bar. Then select options. In the window that appears, select Designers (on the left side) and then uncheck the box that says "Prevent saving changes that require table re-creation." This will allow you to modify the design of tables at any time. The risk is that any data in table can be destroyed when changes are made. This would be re-enabled at release or if we had data that we wanted to preserve.